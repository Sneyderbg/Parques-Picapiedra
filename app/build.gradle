plugins {
  id 'eclipse'
  id 'application'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
}

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

javafx {
    version = "18.0.1"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

application {
    mainClass = "app.App"
    mainModule = "appModule"
}

ext {
    appName = "Parqués"
    appLauncher = "Parqués"
    appPackaging = "Parqués"
    appModuleName = "appModule"
    appMainClass = "app.App"
}

jar {
    manifest {
        attributes 'Main-Class': 'app.App'
    }
}

jlink {
    imageZip = project.file("${buildDir}/distributions/${appPackaging}-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = "${appLauncher}"
    }
}

task dist {
    dependsOn clean, jlinkZip
    description "Calls clean and then jlinkZip [default]"
}


if (project.hasProperty('debugRun') && project.debugRun as boolean) {
    run {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=*:5005'
    }
}

eclipse {
    classpath {
        containers 'org.eclipse.buildship.core.gradleclasspathcontainer'
        file {
            whenMerged {
                entries.findAll { it.properties.kind.equals('lib') && !it.properties.path.contains("junit") }.each {
                    it.entryAttributes['module'] = 'true'
                }
                entries.findAll { it.properties.path.startsWith('org.eclipse.jdt.launching.JRE_CONTAINER') }.each {
                    it.entryAttributes['module'] = 'true'
                }

            }
        }
    }
}